<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Crafting Interpreters in Cpp</title>
    <link>https://koiraladarshan.com.np/</link>
    <description>Recent content on Crafting Interpreters in Cpp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>
</copyright>
    <lastBuildDate>Tue, 11 Jun 2024 20:13:57 +0545</lastBuildDate><atom:link href="https://koiraladarshan.com.np/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jlox in Cpp</title>
      <link>https://koiraladarshan.com.np/posts/jlox-in-cpp/</link>
      <pubDate>Tue, 11 Jun 2024 20:13:57 +0545</pubDate>
      
      <guid>https://koiraladarshan.com.np/posts/jlox-in-cpp/</guid>
      <description><![CDATA[Review of Crafting InterpretersHaving read the book upto the first part, after implementation of Jlox for C++, I can say that this is one of the best books I&rsquo;ve ever read. I initially followed the LLVM&rsquo;s kaleidoscope tutorial, which was good but not enough. It didn&rsquo;t teach about how to actually write an interpreter or a language with usable feature set.
Crafting interpreters does this.]]></description>
    </item>
    
  </channel>
</rss>

